# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'yaml'

load File.expand_path('lib/util.rb')

_conf = load_config('provision/default.yml', {});
_conf = load_config('site.yml', _conf);

install_plugin 'dotenv'

# see http://blog.glidenote.com/blog/2014/02/26/vagrant-dotenv/
if Vagrant.has_plugin?('dotenv')
  Dotenv.load
end


Vagrant.configure('2') do |config|

  if Vagrant.has_plugin?('vagrant-cachier')
    config.cache.scope = :box
  end

  if Vagrant.has_plugin?('vagrant-vbguest')
    config.vbguest.auto_update = false
  end


  config.vm.box = ENV['VAGRANT_BOX'] || _conf['box']
  config.vm.hostname = ENV['VAGRANT_HOSTNAME'] || _conf['hostname']
  config.vm.network :private_network, ip: ENV['VAGRANT_IP'] || _conf['ip']

  config.ssh.forward_agent = true

  config.vm.synced_folder _conf['synced_src'], _conf['synced_dest'],
    create: true, mount_options: ['dmode=777,fmode=666'],
    owner: _conf['synced_owner'], group: _conf['synced_group']

  config.vm.provider :virtualbox do |vb|
    vb.gui = _conf['vm_gui']
    vb.name = ENV['VAGRANT_HOSTNAME'] || _conf['hostname']
    vb.memory = _conf['vm_memory'].to_i
    vb.cpus = _conf['vm_cpus'].to_i
    if 1 < _conf['vm_cpus'].to_i
      vb.customize ['modifyvm', :id, '--ioapic', 'on']
    end
    vb.customize ['modifyvm', :id, '--natdnsproxy1', 'on']
    vb.customize ['modifyvm', :id, '--natdnshostresolver1', 'on']
    vb.customize ['setextradata', :id, 'VBoxInternal/Devices/VMMDev/0/Config/GetHostTimeDisabled', 0]
  end

  if File.exists?(File.join(File.dirname(__FILE__), 'provision-pre.sh')) then
    config.vm.provision :shell, :path => File.join( File.dirname(__FILE__), 'provision-pre.sh' )
  end

  config.vm.provision 'ansible_local' do |ansible|
    ansible.compatibility_mode = '2.0'
    ansible.extra_vars = {
      conf: _conf
    }
    ansible.playbook = 'provision/playbook.yml'
  end

  if File.exists?(File.join(File.dirname(__FILE__), 'provision-post.sh')) then
    config.vm.provision :shell, :privileged => false, :path => File.join( File.dirname(__FILE__), 'provision-post.sh' )
  end

end
